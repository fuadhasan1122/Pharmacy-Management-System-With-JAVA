
import dao.ConnectionProvider;
import javax.swing.JOptionPane;
import java.sql.*;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author fhnab
 */
public class AddMedicine extends javax.swing.JFrame {

    public String numberpattern = "^[0-9]*$";

    /**
     * Creates new form AddMedicine
     */
    public AddMedicine() {
        initComponents();

        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        comboType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPricePerUnit = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        comboCompany = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        comboSubType = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/all_pages_background.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Add Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(291, 6, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-reply-arrow-30.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 0, -1, -1));

        comboType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Liquid", "Tablet", "Capsules", "Topical medicines", "Suppositories", "Drops", "Inhalers", "Injections" }));
        comboType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTypeActionPerformed(evt);
            }
        });
        getContentPane().add(comboType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 370, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Type of medicines");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Quantity");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, -1, -1));

        txtQuantity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        getContentPane().add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 470, 390, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Price Per Unit");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, -1, -1));

        txtPricePerUnit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtPricePerUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 262, -1));

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, -1, -1));

        comboCompany.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comboCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Square Pharmaceuticals Ltd.", "Incepta Pharmaceutical Ltd.", "Beximco Pharmaceuticals Ltd.", "Opsonin Pharma Ltd.", "Renata Ltd.", "Healthcare Pharmaceuticals Ltd.", "ACI Pharmaceuticals Ltd.", "Eskayef Pharmaceuticals Ltd.", "ACME Laboratories Ltd.", "Aristopharma Ltd." }));
        comboCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCompanyActionPerformed(evt);
            }
        });
        getContentPane().add(comboCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 380, 380, -1));

        txtName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 380, -1));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Sub_Type");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, -1, -1));

        comboSubType.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        comboSubType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Antibiotics: Fight bacterial infections", "Antivirals: Treat viral infections", "Antifungals: Treat fungal infections", "Antihistamines: Treat allergies", "Antihypertensives: Lower blood pressure", "Antidiabetics: Manage diabetes", "Antidepressants: Treat depression", "Antipsychotics: Treat psychotic disorders", "Vaccines: Prevent diseases", " ", " " }));
        comboSubType.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
                comboSubTypeAncestorResized(evt);
            }
        });
        getContentPane().add(comboSubType, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 370, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 850, 10));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboTypeActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        // String uniqueId = txtUniqueId.getText();
        /*  String typeMedicine =(String)comboType.getSelectedItem();
         String name = txtName.getText();
         String comboCom = (String)comboCompany.getSelectedItem();
         String quantity = txtQuantity.getText();
         String price = txtPricePerUnit.getText();
         
        /* if(uniqueId.equals("")){
             JOptionPane.showMessageDialog(null, "Medicine ID field is  required.");
         }  if(typeMedicine.equals("")){
             JOptionPane.showMessageDialog(null, "Type of Medicine  field is  required.");
         }else if(name.equals("")){
             JOptionPane.showMessageDialog(null, "Name field is  required.");
         }else if(comboCom.equals("")){
             JOptionPane.showMessageDialog(null, "Company Name field is  required.");
         }else if(quantity.equals("")){
             JOptionPane.showMessageDialog(null, "Quantity field is  required.");
         }
         else if(!quantity.matches(numberpattern)){
             JOptionPane.showMessageDialog(null, "Quantity field is  Invalid.");
         }else if(price.equals("")){
             JOptionPane.showMessageDialog(null, "Price per Unit field is  required.");
         } else if(!price.matches(numberpattern)){
             JOptionPane.showMessageDialog(null, "Price Per Unit field is  Invalid.");
         }else{
             try{
             
            Connection con = ConnectionProvider.getCon();
             PreparedStatement ps = con.prepareStatement("insert into medicine (uniqueId,type_of_medicines,name,companyName,quantity,price) values(?,?,?,?,?,?)");
            // ps.setString(1, uniqueId);
             ps.setString(1, typeMedicine);
             ps.setString(2, name);
             ps.setString(3,comboCom );
             ps.setString(4, quantity);
             ps.setString(5, price);
             ps.executeUpdate();
             JOptionPane.showMessageDialog(null, "Medicine Added Successfully.");
             setVisible(true);
             new AddMedicine().setVisible(true);
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(null, e);
             }
         }
    }//GEN-LAST:event_jButton2ActionPerformed

      */

        // TODO add your handling code here:
        String typeMedicine = (String) comboType.getSelectedItem();
        String subType = (String) comboSubType.getSelectedItem();
        String name = txtName.getText();
        String comboCom = (String) comboCompany.getSelectedItem();
        String quantity = txtQuantity.getText();
        String price = txtPricePerUnit.getText();

        if (typeMedicine.equals("")) {
            JOptionPane.showMessageDialog(null, "Type of Medicine field is required.");
        }
        else if (subType.equals("")) {
            JOptionPane.showMessageDialog(null, "Name field is required.");
        }else if (name.equals("")) {
            JOptionPane.showMessageDialog(null, "Name field is required.");
        } else if (comboCom.equals("")) {
            JOptionPane.showMessageDialog(null, "Company Name field is required.");
        } else if (quantity.equals("")) {
            JOptionPane.showMessageDialog(null, "Quantity field is required.");
        } else if (!quantity.matches(numberpattern)) {
            JOptionPane.showMessageDialog(null, "Quantity field is invalid.");
        } else if (price.equals("")) {
            JOptionPane.showMessageDialog(null, "Price per Unit field is required.");
        } else if (!price.matches(numberpattern)) {
            JOptionPane.showMessageDialog(null, "Price Per Unit field is invalid.");
        } else {
            try {
                Connection con = ConnectionProvider.getCon();
                PreparedStatement ps = con.prepareStatement("INSERT INTO osod (type_of_medicines,sub_type, name, companyName, quantity, price) VALUES (?, ?, ?, ?, ?, ?)", Statement.RETURN_GENERATED_KEYS);
                ps.setString(1, typeMedicine);
                ps.setString(2, subType);
                ps.setString(3, name);
                ps.setString(4, comboCom);
                ps.setString(5, quantity);
                ps.setString(6, price);
                ps.executeUpdate();

                // Retrieve the generated key (medicine_pk)
                ResultSet generatedKeys = ps.getGeneratedKeys();
                if (generatedKeys.next()) {
                    int medicinePk = generatedKeys.getInt(1);
                    int uniqueId = medicinePk + 999;

                    // Update the uniqueId for the inserted record
                    PreparedStatement updatePs = con.prepareStatement("UPDATE osod SET uniqueId = ? WHERE medicine_pk = ?");
                    updatePs.setInt(1, uniqueId);
                    updatePs.setInt(2, medicinePk);
                    updatePs.executeUpdate();
                }

                JOptionPane.showMessageDialog(null, "Medicine Added Successfully.");
                setVisible(false);
                new AddMedicine().setVisible(true);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCompanyActionPerformed

    private void comboSubTypeAncestorResized(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_comboSubTypeAncestorResized
        // TODO add your handling code here:
    }//GEN-LAST:event_comboSubTypeAncestorResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCompany;
    private javax.swing.JComboBox<String> comboSubType;
    private javax.swing.JComboBox<String> comboType;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPricePerUnit;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
